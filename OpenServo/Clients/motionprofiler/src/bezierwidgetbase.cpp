/****************************************************************************
** Form implementation generated from reading ui file 'bezierwidgetbase.ui'
**
** Created: Thu May 3 23:08:32 2007
**      by: The User Interface Compiler ($Id$)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "bezierwidgetbase.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qlabel.h>
#include <qscrollbar.h>
#include <qgroupbox.h>
#include <qcheckbox.h>
#include <qlineedit.h>
#include <qsplitter.h>
#include <qheader.h>
#include <qlistview.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

#include "qbezier.h"
#include "qservo.h"
static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x00, 0x00, 0x6e,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc6, 0x5b, 0x26, 0xfb, 0x00, 0x00, 0x0e,
    0x3f, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed, 0x9d, 0x7d, 0x50, 0x94,
    0xd7, 0xbd, 0xc7, 0x3f, 0xcf, 0x82, 0xf2, 0xb2, 0x2c, 0x28, 0xe2, 0x02,
    0x02, 0x51, 0x57, 0x48, 0x0c, 0xbe, 0xb4, 0x28, 0xa6, 0x37, 0x2a, 0x0e,
    0x4a, 0xaa, 0x37, 0xb9, 0xd2, 0xc9, 0xd8, 0xd8, 0xdc, 0xf6, 0x56, 0xe3,
    0xa4, 0x89, 0x93, 0xe6, 0x1f, 0x6f, 0xda, 0x99, 0xd6, 0xcc, 0xf4, 0x6a,
    0xac, 0xa6, 0x9a, 0xc4, 0xe6, 0x26, 0x93, 0x8c, 0xe3, 0xd5, 0x44, 0x4d,
    0xf5, 0xa6, 0xc9, 0xb4, 0x1a, 0xbd, 0x6a, 0x5a, 0x1c, 0x35, 0xf1, 0x25,
    0xe6, 0x05, 0xac, 0x12, 0x7c, 0x41, 0x8b, 0x28, 0x81, 0x05, 0x59, 0x7c,
    0x01, 0x76, 0x17, 0x10, 0xd8, 0xfd, 0xdd, 0x3f, 0x16, 0x14, 0x65, 0xd7,
    0x7d, 0xd0, 0x7d, 0xd8, 0x7d, 0x76, 0xf8, 0xcc, 0xfc, 0x66, 0x17, 0xf6,
    0x9c, 0xb3, 0xbf, 0x3d, 0xdf, 0xe7, 0x77, 0xce, 0xf3, 0x9c, 0xf3, 0x9c,
    0xf3, 0x28, 0x22, 0x42, 0xb8, 0xb1, 0x6b, 0xc3, 0x06, 0xa9, 0xd8, 0xb3,
    0x07, 0xb9, 0x78, 0x11, 0x65, 0xd0, 0x20, 0x94, 0xd1, 0xa3, 0x99, 0xb2,
    0x68, 0x11, 0x79, 0x85, 0x85, 0x4a, 0xb0, 0x7d, 0x0b, 0x18, 0x22, 0x12,
    0x36, 0xd6, 0xd4, 0xd4, 0x24, 0xab, 0xe6, 0xcd, 0x93, 0x93, 0xb1, 0xb1,
    0x22, 0x70, 0x9b, 0x15, 0x25, 0x26, 0xca, 0x9b, 0x2f, 0xbc, 0x20, 0xed,
    0xed, 0xed, 0x12, 0x6c, 0x3f, 0x03, 0x61, 0x41, 0x77, 0x20, 0x50, 0xd6,
    0xde, 0xde, 0x2e, 0xcb, 0xf2, 0xf2, 0xc4, 0x79, 0x87, 0x60, 0x3d, 0xad,
    0x56, 0x51, 0xe4, 0x0f, 0xf3, 0xe7, 0x0f, 0x08, 0x17, 0x4a, 0xf6, 0xda,
    0xc2, 0x85, 0xd2, 0xa0, 0x28, 0x3e, 0x45, 0xeb, 0xb6, 0xd3, 0x51, 0x51,
    0xb2, 0x79, 0xf9, 0x72, 0xdd, 0x8b, 0xa7, 0x88, 0xe8, 0xbf, 0x8f, 0xfb,
    0x64, 0xe3, 0x46, 0xc9, 0x78, 0xe9, 0x25, 0x72, 0x9d, 0x4e, 0x00, 0xf6,
    0x26, 0x26, 0x72, 0x29, 0x3d, 0x1d, 0x57, 0x5a, 0x1a, 0x00, 0x91, 0xb5,
    0xb5, 0x58, 0xaa, 0xab, 0xf9, 0xd7, 0x6b, 0xd7, 0x00, 0xd8, 0x91, 0x94,
    0xc4, 0xa8, 0x4f, 0x3e, 0x61, 0xd2, 0xf4, 0xe9, 0xfa, 0xed, 0xf3, 0x82,
    0x7d, 0xe4, 0xdc, 0xaf, 0x75, 0x74, 0x74, 0xc8, 0xea, 0xdc, 0x5c, 0x11,
    0x90, 0xca, 0xc8, 0x48, 0x59, 0x91, 0x9f, 0x2f, 0xa7, 0x4f, 0x9e, 0x94,
    0x3b, 0x29, 0x2d, 0x2e, 0x96, 0x15, 0x79, 0x79, 0x52, 0x15, 0x19, 0x29,
    0x02, 0xb2, 0xb2, 0xa0, 0x40, 0xd7, 0x51, 0x17, 0x74, 0x07, 0xee, 0xd7,
    0xb6, 0xac, 0x59, 0x23, 0x55, 0x11, 0x11, 0xf2, 0x5d, 0x44, 0x84, 0xbc,
    0xf1, 0xe2, 0x8b, 0xe2, 0x76, 0xbb, 0x7b, 0x89, 0xd6, 0x8d, 0xcb, 0xe5,
    0x92, 0xd5, 0xbf, 0xf8, 0x85, 0xd4, 0x1a, 0x0c, 0x72, 0xc8, 0x68, 0x94,
    0x43, 0x7b, 0xf6, 0xe8, 0x56, 0xbc, 0xa0, 0x3b, 0x70, 0x3f, 0xe6, 0x76,
    0xbb, 0x65, 0xcd, 0xa4, 0x49, 0xd2, 0x09, 0xf2, 0xbb, 0x19, 0x33, 0xc4,
    0xe5, 0x72, 0xf9, 0x14, 0xad, 0x9b, 0x8e, 0x8e, 0x0e, 0xf9, 0xdd, 0xd4,
    0xa9, 0xe2, 0x06, 0x59, 0xad, 0xe3, 0xa8, 0xd3, 0x75, 0x1f, 0xf7, 0x8f,
    0xe2, 0x62, 0x69, 0x9a, 0x39, 0x13, 0xb7, 0xdb, 0xcd, 0xb0, 0x23, 0x47,
    0xf8, 0xfe, 0xe4, 0xc9, 0xaa, 0xf2, 0x7d, 0x75, 0xe4, 0x08, 0xae, 0x82,
    0x02, 0xce, 0x0c, 0x1f, 0xce, 0xd3, 0x67, 0xcf, 0x12, 0x1f, 0x1f, 0xaf,
    0xbb, 0xbe, 0xce, 0x10, 0x6c, 0x07, 0xee, 0x87, 0xa3, 0x5b, 0xb7, 0x32,
    0xdd, 0xe9, 0xa4, 0x3c, 0x3d, 0x9d, 0x89, 0x39, 0x39, 0xaa, 0xf3, 0xe5,
    0x3e, 0xfa, 0x28, 0x65, 0xe9, 0xe9, 0xcc, 0xae, 0xad, 0x65, 0xdf, 0x9f,
    0xff, 0xac, 0xa1, 0x87, 0xda, 0xa1, 0x6b, 0xe1, 0x3a, 0x4e, 0x9d, 0x62,
    0x10, 0x40, 0x6a, 0x2a, 0x06, 0x83, 0xfa, 0x9f, 0x12, 0x19, 0x19, 0x89,
    0x2b, 0x25, 0x85, 0x91, 0x40, 0xd5, 0xfe, 0xfd, 0x5a, 0xb9, 0xa7, 0x29,
    0xba, 0x15, 0xee, 0xda, 0xb5, 0x6b, 0x92, 0x78, 0xfe, 0x3c, 0x00, 0x62,
    0xb3, 0xf5, 0x29, 0xaf, 0xdb, 0xed, 0x46, 0x69, 0x68, 0x00, 0x40, 0x29,
    0x2f, 0x47, 0x74, 0xd8, 0x5f, 0xe8, 0x56, 0xb8, 0xa2, 0x0f, 0x3f, 0x64,
    0x8e, 0xd5, 0x0a, 0x80, 0xa5, 0xba, 0x9a, 0x73, 0xe5, 0xe5, 0xaa, 0xf3,
    0x96, 0x95, 0x96, 0x32, 0xb6, 0xa6, 0x06, 0x80, 0xef, 0x57, 0x56, 0x72,
    0xa2, 0xb8, 0x58, 0x13, 0x1f, 0xb5, 0x44, 0xb7, 0xc2, 0x59, 0x3f, 0xff,
    0x9c, 0x11, 0x5d, 0xef, 0x0b, 0x9c, 0x4e, 0x3e, 0xfe, 0xf5, 0xaf, 0x55,
    0xe7, 0xdd, 0xb9, 0x74, 0x29, 0x79, 0x6d, 0x6d, 0x00, 0xe4, 0xb5, 0xb4,
    0x70, 0x74, 0xeb, 0x56, 0x0d, 0x3c, 0xd4, 0x16, 0x5d, 0x0a, 0xe7, 0x76,
    0xbb, 0x45, 0xe9, 0x11, 0x61, 0x51, 0xc0, 0x53, 0x07, 0x0f, 0xf2, 0xa7,
    0x35, 0x6b, 0xfc, 0xe6, 0x7d, 0xff, 0x95, 0x57, 0xf8, 0xd9, 0xe7, 0x9f,
    0x7b, 0xfa, 0x46, 0x60, 0x10, 0xd0, 0x7e, 0xea, 0x94, 0x26, 0x7e, 0x6a,
    0x4a, 0xb0, 0xaf, 0x47, 0xee, 0xc5, 0xfe, 0x51, 0x52, 0x22, 0x07, 0xa2,
    0xa3, 0xe5, 0xce, 0x71, 0xc8, 0x2f, 0xe3, 0xe2, 0xe4, 0xd5, 0x27, 0x9f,
    0x14, 0x5b, 0x7d, 0x7d, 0xaf, 0xeb, 0xb7, 0xba, 0xda, 0x5a, 0x59, 0x55,
    0x58, 0x28, 0xc5, 0x46, 0x63, 0xaf, 0x7c, 0xeb, 0x33, 0x32, 0xc4, 0x6e,
    0xb7, 0xeb, 0xea, 0x9a, 0x2e, 0x32, 0xd8, 0x07, 0xce, 0xbd, 0x50, 0x53,
    0x5e, 0x4e, 0x76, 0x57, 0x53, 0xd7, 0x93, 0x7f, 0x71, 0x38, 0x98, 0xb4,
    0x73, 0x27, 0x1f, 0x1e, 0x3f, 0x8e, 0xd3, 0x62, 0xb9, 0x35, 0x56, 0x69,
    0xb5, 0x12, 0x77, 0xe1, 0x02, 0xbf, 0xa9, 0xa9, 0xb9, 0x19, 0x69, 0x3d,
    0x49, 0x6b, 0x6c, 0xa4, 0xae, 0xae, 0x8e, 0xac, 0xac, 0x2c, 0x8d, 0x3d,
    0x0f, 0x1c, 0xba, 0x14, 0xae, 0xbe, 0xb2, 0x92, 0x7c, 0x1f, 0x9f, 0x0d,
    0x06, 0x16, 0x55, 0x57, 0x43, 0x75, 0xb5, 0xea, 0xf2, 0xcc, 0x0e, 0x07,
    0x36, 0x9d, 0x09, 0xa7, 0xcb, 0x3e, 0xce, 0x5e, 0x5f, 0x8f, 0x29, 0x80,
    0xe5, 0x25, 0x8b, 0x60, 0xbb, 0x70, 0x21, 0x80, 0x25, 0x6a, 0x8f, 0x2e,
    0x85, 0x53, 0x1c, 0x0e, 0xd5, 0x69, 0xcf, 0xa8, 0x48, 0x63, 0x06, 0x6c,
    0x17, 0x2f, 0xde, 0xb3, 0x3f, 0xc1, 0x40, 0x97, 0xc2, 0x89, 0xdd, 0xae,
    0x3a, 0xed, 0x1b, 0xc0, 0x79, 0x3f, 0x69, 0x62, 0x80, 0xd6, 0x2b, 0x57,
    0xee, 0xc7, 0xa5, 0x7e, 0x47, 0x97, 0xc2, 0xa9, 0x8d, 0xb8, 0x0e, 0xa0,
    0x08, 0xd8, 0xa9, 0x26, 0x71, 0x1f, 0xa2, 0x38, 0x14, 0xd0, 0xa5, 0x70,
    0x6a, 0x2b, 0x79, 0x37, 0x50, 0x07, 0xfc, 0x4d, 0x45, 0xda, 0xbe, 0x44,
    0x71, 0x28, 0xa0, 0x4b, 0xe1, 0xd4, 0x56, 0xf2, 0xa7, 0x5d, 0xaf, 0x47,
    0x81, 0x4a, 0x3f, 0x69, 0xfb, 0xd2, 0x6f, 0x86, 0x02, 0xba, 0x13, 0x4e,
    0x44, 0xc4, 0xa0, 0xa2, 0x92, 0x3b, 0xb9, 0x25, 0x5c, 0x27, 0x2a, 0x9a,
    0xcb, 0x01, 0xe1, 0xb4, 0xc5, 0x6e, 0xb7, 0x13, 0xef, 0xe5, 0xe2, 0xfb,
    0x4e, 0xf6, 0xe2, 0x69, 0x26, 0xbb, 0xf9, 0xd4, 0x57, 0xc2, 0x2e, 0xa4,
    0xeb, 0x46, 0x23, 0xbd, 0xa0, 0x3b, 0xe1, 0xdc, 0x6e, 0xb7, 0x67, 0xa0,
    0xca, 0x0f, 0x7b, 0xef, 0xf8, 0xfb, 0x08, 0x50, 0x75, 0xb7, 0x0c, 0x3a,
    0x9b, 0xd9, 0xd1, 0x9d, 0x70, 0x6a, 0x70, 0xd1, 0x3b, 0xc2, 0xda, 0x81,
    0x5d, 0x41, 0xf0, 0x45, 0x2b, 0xc2, 0x52, 0xb8, 0xbd, 0x80, 0xd5, 0xcb,
    0xff, 0xfd, 0x35, 0x97, 0x7a, 0x22, 0x6c, 0x85, 0xf3, 0xc6, 0x21, 0xbc,
    0x0b, 0xaa, 0x47, 0xc2, 0x4e, 0x38, 0x37, 0xbe, 0x23, 0xab, 0x8d, 0xf0,
    0x69, 0x2e, 0xc3, 0x4e, 0xb8, 0x4f, 0x81, 0x1a, 0x3f, 0x9f, 0x87, 0x03,
    0x61, 0x27, 0xdc, 0x1e, 0x3f, 0x9f, 0x7f, 0x06, 0x5c, 0xee, 0x0f, 0x47,
    0x34, 0x26, 0xac, 0x84, 0xbb, 0x5b, 0x33, 0xd9, 0x4d, 0x0b, 0xf0, 0x7f,
    0xfd, 0xe0, 0x8b, 0xd6, 0x84, 0x95, 0x70, 0x7f, 0x07, 0xd4, 0x4c, 0x9f,
    0xfa, 0x3a, 0x79, 0xd1, 0x13, 0x61, 0x25, 0x9c, 0xbf, 0x66, 0xb2, 0x9b,
    0x83, 0x40, 0xdf, 0xee, 0xc4, 0x0c, 0x3d, 0xc2, 0x46, 0x38, 0x41, 0x7d,
    0x24, 0x39, 0xf0, 0xcc, 0x1c, 0xe8, 0x19, 0x5d, 0xde, 0x73, 0xe2, 0x8d,
    0x46, 0xe0, 0x69, 0xa0, 0x02, 0xcf, 0x4c, 0x40, 0xe9, 0x1d, 0x9f, 0x8f,
    0xc6, 0x33, 0xd3, 0xdd, 0x8d, 0xfa, 0xdb, 0x67, 0x43, 0x93, 0xb0, 0x11,
    0x6e, 0x28, 0xf0, 0x7a, 0xd7, 0xfb, 0x6b, 0x40, 0x56, 0xd7, 0x6b, 0x37,
    0x2f, 0x03, 0xcf, 0xf7, 0xb7, 0x53, 0x1a, 0x12, 0x36, 0x4d, 0x65, 0x4f,
    0x12, 0x81, 0x7f, 0xeb, 0xf1, 0x77, 0x02, 0xf0, 0x54, 0x90, 0x7c, 0xd1,
    0x8a, 0xb0, 0x14, 0x0e, 0x60, 0x6e, 0x8f, 0xf7, 0x53, 0xf1, 0x44, 0x64,
    0x38, 0x11, 0xb6, 0xc2, 0x8d, 0xe9, 0xf1, 0x3e, 0x39, 0x68, 0x5e, 0x68,
    0x47, 0xd8, 0x0a, 0xf7, 0x20, 0xb7, 0x3a, 0x70, 0xf3, 0xdd, 0x12, 0xea,
    0x94, 0xb0, 0x15, 0xce, 0xc4, 0xad, 0x48, 0x1b, 0x1e, 0x4c, 0x47, 0x34,
    0x42, 0x93, 0xb3, 0x4a, 0xa7, 0xd3, 0x29, 0x36, 0x9b, 0x0d, 0xdb, 0xe5,
    0xcb, 0xd8, 0x2a, 0x2b, 0xb9, 0x6e, 0xb5, 0xe2, 0x76, 0xb9, 0x02, 0x52,
    0x76, 0x6b, 0x5b, 0x1b, 0xa7, 0x1d, 0x0e, 0xd4, 0x2c, 0xda, 0x8e, 0xe8,
    0x7a, 0x2d, 0x07, 0xb6, 0xf8, 0x49, 0x7b, 0xba, 0xa1, 0x81, 0x2d, 0xab,
    0x57, 0xdf, 0xf7, 0x34, 0xb8, 0x21, 0x22, 0x82, 0xa1, 0x69, 0x69, 0x98,
    0x2d, 0x16, 0xcc, 0x29, 0x29, 0x98, 0xcd, 0x66, 0x8c, 0x46, 0x63, 0xc0,
    0xd7, 0x98, 0xdf, 0xd3, 0xe2, 0xfd, 0xce, 0xce, 0x4e, 0x39, 0xf6, 0xd9,
    0x67, 0x1c, 0xdf, 0xbe, 0x1d, 0xae, 0x5f, 0x47, 0x1c, 0x0e, 0x70, 0x38,
    0x50, 0x1c, 0x0e, 0xc4, 0x6e, 0x27, 0xae, 0xa5, 0x05, 0xb3, 0xd3, 0x89,
    0xb9, 0xb9, 0x99, 0x64, 0xb7, 0x9b, 0x44, 0x50, 0x55, 0xd1, 0x81, 0x66,
    0x3e, 0xb0, 0x1f, 0xf8, 0x18, 0x98, 0xdd, 0x4f, 0xdf, 0x29, 0x78, 0x2e,
    0x43, 0xea, 0x0d, 0x06, 0x6c, 0xf1, 0xf1, 0xd8, 0x8c, 0x46, 0x1c, 0xb1,
    0xb1, 0x28, 0x26, 0x13, 0x12, 0x17, 0x07, 0x71, 0x71, 0x28, 0x71, 0x71,
    0x30, 0x74, 0x28, 0x93, 0x7f, 0xfc, 0x63, 0xa6, 0xce, 0x9c, 0x49, 0x64,
    0x64, 0x64, 0x9f, 0xab, 0x47, 0xb5, 0x70, 0xf5, 0xf5, 0xf5, 0x52, 0xb4,
    0x75, 0x2b, 0xb6, 0x2f, 0xbe, 0x20, 0xa2, 0xbc, 0x9c, 0xa9, 0x95, 0x95,
    0x4c, 0x69, 0x6f, 0x0f, 0xe9, 0xb6, 0xf6, 0x59, 0x60, 0x33, 0x50, 0x02,
    0xa8, 0xdb, 0x8f, 0xa1, 0xff, 0x70, 0x03, 0xc5, 0x83, 0x07, 0x73, 0xcc,
    0x62, 0xc1, 0x35, 0x76, 0x2c, 0xe6, 0x69, 0xd3, 0x98, 0xb3, 0x60, 0x01,
    0xc9, 0xc9, 0xc9, 0xaa, 0x44, 0xbc, 0xab, 0x70, 0xa5, 0xc5, 0xc5, 0x72,
    0x70, 0xd3, 0x26, 0x5c, 0xa7, 0x4f, 0x93, 0xf2, 0xcf, 0x7f, 0x32, 0xfb,
    0xf2, 0x65, 0x5d, 0x75, 0xf4, 0x2f, 0xe3, 0xb9, 0x05, 0xfd, 0x0a, 0x30,
    0x24, 0xc8, 0xbe, 0xf8, 0xc3, 0x06, 0xec, 0x4b, 0x49, 0xe1, 0x72, 0x56,
    0x16, 0x11, 0xe3, 0xc6, 0x31, 0xeb, 0xd9, 0x67, 0xf9, 0xde, 0x94, 0x29,
    0xbe, 0x45, 0xf4, 0xb6, 0x68, 0xae, 0xac, 0xa4, 0x44, 0x5e, 0x2f, 0x2c,
    0x94, 0x7d, 0x09, 0x09, 0xd2, 0xe9, 0x67, 0x53, 0xb3, 0x50, 0xb6, 0xb7,
    0x40, 0xcc, 0x21, 0xe0, 0x47, 0x5f, 0xad, 0x13, 0x64, 0x5f, 0x42, 0x82,
    0xbc, 0x5e, 0x58, 0x28, 0x65, 0x25, 0x25, 0x5e, 0x17, 0x5c, 0xde, 0x16,
    0x71, 0x76, 0xbb, 0x5d, 0xd6, 0x3d, 0xf7, 0x1c, 0x13, 0x0f, 0x1c, 0xe0,
    0xf1, 0xab, 0x57, 0x71, 0x01, 0xa5, 0x06, 0x03, 0x65, 0xc9, 0xc9, 0xb4,
    0x26, 0x25, 0x11, 0xd3, 0xd0, 0xc0, 0x04, 0x9b, 0x8d, 0xef, 0xb9, 0xdd,
    0x37, 0x3b, 0xfe, 0x50, 0xe6, 0x23, 0x60, 0x15, 0x10, 0xea, 0x0b, 0x85,
    0x4b, 0x62, 0x62, 0x28, 0x4e, 0x4d, 0x85, 0xf4, 0x74, 0x88, 0x8a, 0xc2,
    0x5d, 0x53, 0xc3, 0x28, 0xab, 0x95, 0x27, 0x9a, 0x9b, 0xf9, 0xfb, 0xb0,
    0x61, 0x7c, 0x5b, 0x50, 0xc0, 0x8b, 0xef, 0xbd, 0x87, 0xc9, 0x64, 0xba,
    0x15, 0x81, 0xdd, 0x0a, 0x96, 0x97, 0x96, 0xca, 0xca, 0x9c, 0x9c, 0x9b,
    0xfb, 0x3d, 0x9e, 0x8c, 0x8d, 0x95, 0x57, 0xe7, 0xce, 0x95, 0xa3, 0x07,
    0x0e, 0x88, 0xc3, 0xe1, 0x10, 0x11, 0x11, 0x87, 0xc3, 0x21, 0x47, 0xf7,
    0xef, 0x97, 0x95, 0x8f, 0x3f, 0x2e, 0x27, 0x63, 0x62, 0x82, 0x7e, 0x64,
    0xfa, 0xb3, 0xfd, 0x20, 0x8f, 0x86, 0x80, 0x1f, 0xbe, 0xac, 0x09, 0x64,
    0xed, 0xa4, 0x49, 0xb2, 0xef, 0x2f, 0x7f, 0x91, 0xce, 0xce, 0xce, 0xdb,
    0x96, 0x3e, 0x9f, 0x3e, 0x79, 0x52, 0x7e, 0x3f, 0x6b, 0x96, 0x9c, 0x1f,
    0x3c, 0x58, 0x9c, 0x20, 0x2b, 0x73, 0x72, 0xa4, 0xbc, 0xb4, 0xf4, 0x66,
    0xf4, 0x21, 0x22, 0x94, 0x7e, 0xfd, 0xb5, 0xac, 0x1b, 0x39, 0xf2, 0x66,
    0x81, 0x3b, 0x46, 0x8c, 0x90, 0xbd, 0x9b, 0x37, 0xf7, 0x5a, 0x47, 0xdd,
    0x93, 0x5d, 0x1b, 0x37, 0xca, 0x5f, 0x53, 0x53, 0x83, 0xfe, 0xe3, 0xef,
    0x66, 0x87, 0x41, 0x66, 0x84, 0x80, 0x1f, 0xde, 0xcc, 0x09, 0xb2, 0x62,
    0xee, 0x5c, 0x69, 0x6b, 0x6b, 0xbb, 0x6b, 0x3d, 0xbf, 0xfb, 0xdb, 0xdf,
    0xca, 0xa9, 0xa8, 0x28, 0x11, 0x90, 0x75, 0x23, 0x47, 0x4a, 0xe9, 0xd7,
    0x5f, 0x8b, 0x88, 0x40, 0x6b, 0x6b, 0xab, 0xac, 0xec, 0xda, 0x36, 0x50,
    0xf0, 0x6c, 0x1d, 0xb8, 0x69, 0xd9, 0xb2, 0xbb, 0x16, 0xd6, 0xcd, 0x86,
    0x97, 0x5f, 0x96, 0xca, 0x88, 0x88, 0xa0, 0x57, 0x82, 0x2f, 0xfb, 0x12,
    0x64, 0x56, 0x08, 0xf8, 0xe1, 0xcd, 0x5e, 0x9b, 0x30, 0x41, 0x9a, 0x9b,
    0x9b, 0x55, 0xd5, 0xf3, 0xf2, 0x39, 0x73, 0xe4, 0x46, 0x57, 0xbe, 0x95,
    0xb9, 0xb9, 0xd2, 0xda, 0xda, 0x2a, 0xbc, 0xb3, 0x64, 0x89, 0x34, 0xf6,
    0x28, 0xf0, 0x8d, 0x19, 0x33, 0xee, 0xba, 0x75, 0x60, 0x4f, 0xdc, 0x6e,
    0xb7, 0xac, 0x9d, 0x36, 0x2d, 0xe8, 0x95, 0xe0, 0xcb, 0x8e, 0x83, 0xcc,
    0x0e, 0x01, 0x3f, 0xee, 0xb4, 0x5a, 0x90, 0x8f, 0xd6, 0xad, 0x53, 0x55,
    0xc7, 0x22, 0x22, 0xb5, 0x56, 0xab, 0x7c, 0x9c, 0x94, 0x24, 0x02, 0xd2,
    0x08, 0xf2, 0xce, 0x92, 0x25, 0x62, 0x68, 0x2b, 0x2b, 0x23, 0xa1, 0x47,
    0x47, 0x19, 0x35, 0x76, 0x2c, 0x8a, 0xa2, 0xee, 0x7a, 0x50, 0x51, 0x14,
    0x62, 0xc7, 0x8d, 0x0b, 0x70, 0x57, 0x1d, 0x38, 0xa2, 0x08, 0xcd, 0x09,
    0xc7, 0x63, 0xc3, 0x86, 0x31, 0xfd, 0x47, 0x3f, 0x52, 0x9d, 0x3e, 0x75,
    0xc4, 0x08, 0xae, 0x8e, 0x1a, 0x05, 0x78, 0xa6, 0xa8, 0xda, 0xca, 0xca,
    0x30, 0x18, 0xac, 0xb7, 0xee, 0xed, 0xad, 0x02, 0xd2, 0xa6, 0x4c, 0xe9,
    0x93, 0x13, 0xc9, 0x53, 0xa6, 0x84, 0xec, 0xed, 0x6e, 0x46, 0x42, 0x73,
    0x30, 0xf6, 0x3b, 0xb3, 0x99, 0xb4, 0xae, 0xad, 0x3c, 0xd4, 0x22, 0x3d,
    0xd2, 0x1b, 0xac, 0x56, 0x0c, 0x92, 0x94, 0x74, 0xf3, 0x1f, 0x89, 0x40,
    0x63, 0x6d, 0x6d, 0x9f, 0x0a, 0x6c, 0xae, 0xab, 0xbb, 0x2d, 0x62, 0x43,
    0x89, 0x38, 0x42, 0x53, 0xb8, 0x61, 0x8d, 0x8d, 0x34, 0x36, 0x36, 0xf6,
    0x29, 0x8f, 0xd2, 0x63, 0x8d, 0xba, 0x24, 0x25, 0x61, 0x10, 0x8b, 0x85,
    0xee, 0xe1, 0x5f, 0x13, 0xd0, 0x72, 0xde, 0xdf, 0x52, 0xf7, 0xdb, 0x69,
    0x3d, 0x7b, 0x96, 0x98, 0x3e, 0xe5, 0xe8, 0x3f, 0xa2, 0x09, 0xcd, 0xa6,
    0xf2, 0x07, 0x97, 0x2f, 0x53, 0x7c, 0xe8, 0x90, 0xea, 0xf4, 0x2d, 0x2d,
    0x2d, 0x44, 0x5f, 0xba, 0x04, 0x78, 0x56, 0x22, 0x89, 0xc5, 0x02, 0x75,
    0x56, 0xab, 0xbc, 0x93, 0x99, 0x79, 0xb3, 0xe3, 0x5c, 0x9f, 0x95, 0x25,
    0xb5, 0x35, 0x35, 0xaa, 0x3a, 0xcd, 0x9a, 0xaa, 0x2a, 0x59, 0x6f, 0xb1,
    0x04, 0xbd, 0xb3, 0xf7, 0x65, 0x37, 0x40, 0xfe, 0x3d, 0x04, 0xfc, 0xf0,
    0x66, 0xcb, 0x55, 0x6e, 0x45, 0x2c, 0x22, 0xf2, 0xc7, 0xe7, 0x9e, 0x93,
    0x86, 0xae, 0x7c, 0xef, 0x64, 0x66, 0x4a, 0x9d, 0xd5, 0xea, 0xb9, 0x98,
    0xdb, 0xbd, 0x79, 0xb3, 0x14, 0x25, 0x24, 0x88, 0xe0, 0x19, 0x6e, 0xf9,
    0xfd, 0x0f, 0x7f, 0xe8, 0xb7, 0x30, 0xb7, 0xdb, 0x2d, 0xff, 0x35, 0x73,
    0x66, 0xc8, 0x0f, 0x89, 0x2d, 0x0c, 0x01, 0x1f, 0xbc, 0x59, 0x4d, 0x44,
    0x84, 0xac, 0xfb, 0xd5, 0xaf, 0xfc, 0xd6, 0xf3, 0x81, 0x1d, 0x3b, 0xe4,
    0x6f, 0x43, 0x87, 0x8a, 0x80, 0x14, 0x25, 0x24, 0xc8, 0x6e, 0xcf, 0xf5,
    0x35, 0x88, 0x78, 0xc4, 0xdb, 0xbe, 0x6e, 0x9d, 0x7c, 0x90, 0x91, 0x21,
    0x02, 0x72, 0x29, 0x32, 0x52, 0x56, 0x3e, 0xf6, 0x98, 0x5c, 0xac, 0xa8,
    0xf0, 0x5a, 0x58, 0xe5, 0xf9, 0xf3, 0xb2, 0x7c, 0xe6, 0x4c, 0xb9, 0xd4,
    0xb5, 0x15, 0x7c, 0x28, 0xdb, 0xe2, 0x10, 0xf0, 0xc1, 0x97, 0x1d, 0x8f,
    0x8d, 0x95, 0x57, 0x0b, 0x0b, 0xa5, 0xce, 0x6a, 0xed, 0x55, 0xc7, 0x6d,
    0x6d, 0x6d, 0xf2, 0xf6, 0x2f, 0x7f, 0x29, 0x7f, 0x35, 0x9b, 0x45, 0x40,
    0x3e, 0xc8, 0xc8, 0x90, 0xed, 0x9e, 0x4b, 0x08, 0x44, 0xee, 0x18, 0xab,
    0x3c, 0x7d, 0xfc, 0xb8, 0xec, 0x5c, 0xbc, 0x98, 0x67, 0x4e, 0x9c, 0x20,
    0x4d, 0x84, 0x3f, 0x65, 0x64, 0xd0, 0xf4, 0xc8, 0x23, 0x44, 0x59, 0x2c,
    0xa4, 0xe7, 0xe4, 0x50, 0x73, 0xe2, 0x04, 0x37, 0x2e, 0x5c, 0x20, 0xe1,
    0x9b, 0x6f, 0x58, 0x58, 0x53, 0x13, 0x94, 0x39, 0xb6, 0xbe, 0xb2, 0x04,
    0x78, 0x3b, 0xd8, 0x4e, 0xdc, 0x85, 0x4e, 0x60, 0xeb, 0x03, 0x0f, 0xe0,
    0xcc, 0xca, 0x22, 0x62, 0xd4, 0x28, 0x88, 0x8a, 0xc2, 0x75, 0xe9, 0x12,
    0xee, 0xca, 0x4a, 0xfe, 0xa3, 0xbc, 0x9c, 0x56, 0x45, 0xe1, 0x83, 0x9c,
    0x1c, 0x9e, 0xdc, 0xb0, 0x81, 0x71, 0x93, 0x27, 0xf7, 0x1e, 0xab, 0xec,
    0xb6, 0xf6, 0xf6, 0x76, 0x79, 0x7f, 0xc5, 0x0a, 0x59, 0x9b, 0x9d, 0x2d,
    0xb6, 0xae, 0x23, 0xa3, 0x13, 0xe4, 0xbb, 0xae, 0xd7, 0x60, 0x1f, 0xa5,
    0x7d, 0xb5, 0xdf, 0x84, 0x80, 0x0f, 0xf7, 0x62, 0x36, 0x90, 0xb5, 0xd9,
    0xd9, 0xf2, 0xfe, 0x8a, 0x15, 0x5e, 0x1f, 0xe4, 0xe4, 0x73, 0x3e, 0xae,
    0xb5, 0xb5, 0x55, 0x3e, 0x5c, 0xb3, 0x06, 0xfb, 0x97, 0x5f, 0x62, 0x3c,
    0x77, 0x8e, 0x82, 0xea, 0x6a, 0x2c, 0x3e, 0xd2, 0x86, 0x32, 0xaf, 0x74,
    0x99, 0x1e, 0xa8, 0x54, 0x14, 0x0e, 0x64, 0x64, 0xe0, 0x7c, 0xe8, 0x21,
    0x4c, 0x8f, 0x3e, 0xca, 0xcf, 0x96, 0x2e, 0x25, 0x26, 0x26, 0xc6, 0x6b,
    0xc3, 0xa6, 0x6a, 0x06, 0xdc, 0xe9, 0x74, 0xca, 0xc1, 0x1d, 0x3b, 0xa8,
    0x2c, 0x2a, 0x82, 0x33, 0x67, 0x98, 0x58, 0x51, 0xc1, 0x74, 0xbb, 0xdd,
    0xeb, 0xde, 0x8f, 0xa1, 0xc6, 0x1a, 0x60, 0x69, 0xb0, 0x9d, 0xf0, 0x41,
    0x07, 0x70, 0xd4, 0x64, 0xe2, 0xdb, 0xcc, 0x4c, 0xc8, 0xce, 0xc6, 0x32,
    0x67, 0x0e, 0xb3, 0xe6, 0xcd, 0x53, 0x75, 0x8f, 0xca, 0x3d, 0xdd, 0x73,
    0x72, 0xea, 0xdb, 0x6f, 0xe5, 0x8b, 0x6d, 0xdb, 0xe8, 0x3c, 0x73, 0x06,
    0xe5, 0xfa, 0x75, 0x14, 0xbb, 0x1d, 0x83, 0xc3, 0xc1, 0x70, 0xa7, 0x93,
    0xe1, 0xcd, 0xcd, 0xa4, 0xb4, 0xb5, 0x61, 0x86, 0x90, 0xb8, 0x30, 0x7f,
    0x0b, 0xf8, 0xcf, 0x20, 0x7d, 0x77, 0x13, 0x9e, 0x99, 0xed, 0xcb, 0xd1,
    0xd1, 0x34, 0xc4, 0xc7, 0xd3, 0x60, 0x34, 0xe2, 0x8e, 0x8b, 0x43, 0x4c,
    0x26, 0x64, 0xe8, 0x50, 0x22, 0xb3, 0xb3, 0x99, 0xf6, 0xf3, 0x9f, 0x33,
    0x7e, 0xe2, 0x44, 0xed, 0xee, 0x39, 0xf1, 0x87, 0xcb, 0xe5, 0x92, 0x2b,
    0x57, 0xae, 0x60, 0xb3, 0xd9, 0xb0, 0x55, 0x57, 0x63, 0xab, 0xa8, 0xa0,
    0xb1, 0xb6, 0x16, 0xc5, 0x6e, 0x47, 0x9c, 0x4e, 0x94, 0x00, 0x7d, 0xcf,
    0x8d, 0xf6, 0x76, 0xbe, 0xdb, 0xb5, 0x8b, 0xac, 0xd6, 0x56, 0x55, 0xe9,
    0x0f, 0x03, 0x33, 0x54, 0xa4, 0x3b, 0x33, 0x64, 0x08, 0xd9, 0x7d, 0x18,
    0x3f, 0xf4, 0x85, 0x28, 0x0a, 0x8a, 0xd1, 0x88, 0x98, 0x4c, 0x0c, 0x19,
    0x31, 0x02, 0x73, 0x66, 0x26, 0xe6, 0x8c, 0x0c, 0xcc, 0x66, 0x33, 0x49,
    0x49, 0x49, 0x44, 0x44, 0x44, 0x04, 0xe6, 0x9c, 0xee, 0xce, 0x4e, 0x2f,
    0xd4, 0xed, 0xfa, 0xf5, 0xeb, 0xb2, 0x29, 0x25, 0x45, 0x75, 0x27, 0xbf,
    0x45, 0x65, 0xba, 0x37, 0xc7, 0x8f, 0xef, 0x75, 0x02, 0x10, 0xca, 0x16,
    0x8a, 0x43, 0x79, 0x01, 0x25, 0x54, 0x87, 0xe3, 0xee, 0x97, 0xb0, 0x17,
    0x2e, 0x31, 0xd8, 0x0e, 0x68, 0x44, 0xd8, 0x0b, 0x37, 0x2c, 0xd8, 0x0e,
    0x68, 0x44, 0xd8, 0x0b, 0xf7, 0x60, 0xb0, 0x1d, 0xd0, 0x88, 0xb0, 0x17,
    0xce, 0x18, 0x6c, 0x07, 0x34, 0x22, 0xec, 0x85, 0x0b, 0x57, 0x06, 0x84,
    0xd3, 0x29, 0x03, 0xc2, 0xe9, 0x94, 0x01, 0xe1, 0x74, 0xca, 0x80, 0x70,
    0x3a, 0x65, 0x40, 0x38, 0x9d, 0x32, 0x20, 0x9c, 0x4e, 0x19, 0x10, 0x4e,
    0xa7, 0x0c, 0x08, 0xa7, 0x53, 0x06, 0x84, 0xd3, 0x29, 0x03, 0xc2, 0xe9,
    0x14, 0xdd, 0x09, 0x67, 0x30, 0x18, 0x40, 0xe5, 0x6a, 0xa2, 0x3e, 0xa1,
    0x45, 0x99, 0x1a, 0xa2, 0x3b, 0xe1, 0x4c, 0x26, 0x13, 0xcd, 0xd1, 0xd1,
    0x01, 0x2f, 0x57, 0x31, 0xea, 0x6b, 0x38, 0x5a, 0x77, 0xc2, 0x29, 0x8a,
    0xa2, 0xb8, 0xe3, 0xe2, 0x02, 0x5f, 0xb0, 0x16, 0x65, 0x6a, 0x88, 0xee,
    0x84, 0x03, 0x50, 0x4c, 0x81, 0x7c, 0xb4, 0xad, 0x07, 0x19, 0x10, 0xae,
    0x1f, 0xd0, 0xa0, 0x92, 0xb5, 0x38, 0x18, 0xb4, 0x44, 0x97, 0xc2, 0x69,
    0x12, 0x1d, 0x03, 0x11, 0xa7, 0x3d, 0x81, 0x8e, 0x8e, 0x56, 0x20, 0xa6,
    0xc7, 0xca, 0x5c, 0x3d, 0xa0, 0x4b, 0xe1, 0x02, 0x1d, 0x71, 0x36, 0xc0,
    0x3c, 0x7a, 0x74, 0x40, 0xcb, 0xd4, 0x1a, 0x5d, 0x0a, 0x67, 0x4a, 0x4e,
    0x26, 0x90, 0xcf, 0x10, 0xae, 0x57, 0x14, 0xcc, 0x63, 0xc6, 0xf8, 0x4f,
    0x18, 0x42, 0xe8, 0x52, 0xb8, 0x64, 0x8b, 0xc5, 0xef, 0x93, 0x3a, 0x04,
    0xcf, 0x83, 0xdb, 0xcf, 0x00, 0xfe, 0xb6, 0x38, 0xb5, 0xc5, 0xc5, 0x61,
    0x4e, 0x4d, 0x0d, 0x88, 0x6f, 0xfd, 0x45, 0x28, 0xae, 0x6d, 0xf7, 0x4b,
    0xfa, 0xd8, 0xb1, 0x54, 0x45, 0x47, 0x33, 0xc6, 0xcb, 0x43, 0x6e, 0xcf,
    0x46, 0x47, 0xb3, 0x7b, 0xda, 0x34, 0x4c, 0x13, 0x26, 0x60, 0x99, 0x3e,
    0x9d, 0xc8, 0x41, 0x83, 0x38, 0x7c, 0xf8, 0x30, 0x8e, 0xb3, 0x67, 0xc9,
    0x3f, 0x7c, 0x98, 0x5c, 0x2f, 0x4f, 0x1f, 0xb6, 0x0e, 0x19, 0x42, 0xbe,
    0xce, 0x84, 0x0b, 0xfa, 0x3d, 0xf0, 0xf7, 0x62, 0x2e, 0x97, 0x4b, 0xd6,
    0x8e, 0x1b, 0xd7, 0x7b, 0x9d, 0x40, 0x66, 0xa6, 0x7c, 0xf4, 0xd6, 0x5b,
    0xe2, 0x8b, 0xdd, 0x5b, 0xb6, 0xc8, 0xbb, 0x0f, 0x3f, 0xdc, 0x2b, 0xdf,
    0x1b, 0xf9, 0xf9, 0xba, 0x5a, 0x37, 0xa0, 0xdb, 0xb5, 0x03, 0x06, 0x83,
    0x41, 0x91, 0xb1, 0x63, 0x6f, 0xfb, 0xdf, 0xa7, 0x49, 0x49, 0x58, 0xde,
    0x7e, 0x9b, 0xa7, 0x97, 0x2c, 0xf1, 0x99, 0x6f, 0xee, 0x33, 0xcf, 0x90,
    0xbf, 0x6d, 0x1b, 0xdb, 0x7a, 0x6c, 0xf6, 0xd2, 0x01, 0x0c, 0x1e, 0x3f,
    0x5e, 0x2b, 0x57, 0x35, 0x43, 0x97, 0xc2, 0x01, 0xa4, 0xe5, 0xe7, 0xd3,
    0xbd, 0x95, 0x4e, 0x23, 0x70, 0xee, 0xa9, 0xa7, 0xc8, 0x7b, 0xe2, 0x09,
    0xbf, 0xf9, 0xc6, 0x4d, 0x9a, 0xc4, 0x8d, 0xe7, 0x9f, 0xa7, 0xca, 0xe0,
    0xf9, 0xe9, 0x47, 0x62, 0x63, 0x99, 0xbe, 0x60, 0x81, 0x76, 0x8e, 0x6a,
    0x45, 0xb0, 0x43, 0xfe, 0x5e, 0xed, 0xea, 0xd5, 0xab, 0xb2, 0x29, 0x2d,
    0x4d, 0x04, 0x64, 0x8f, 0xc9, 0x24, 0x15, 0x3e, 0x76, 0x88, 0xf0, 0x46,
    0x73, 0x73, 0xb3, 0x6c, 0xea, 0xda, 0xb2, 0xf1, 0x8f, 0xe3, 0xc7, 0x77,
    0x6f, 0x3a, 0x17, 0xf4, 0xdf, 0xd4, 0x17, 0xd3, 0x6d, 0xc4, 0x25, 0x26,
    0x26, 0x2a, 0xd7, 0x1e, 0xf4, 0xac, 0x0c, 0xb8, 0x98, 0x96, 0xc6, 0x98,
    0x3e, 0x9c, 0xce, 0x9b, 0x4c, 0x26, 0x9c, 0x19, 0x19, 0x00, 0x88, 0x67,
    0xd3, 0x39, 0x7d, 0xcd, 0xe9, 0xa0, 0xe3, 0xa6, 0x12, 0x60, 0xd0, 0xf8,
    0xf1, 0x74, 0x00, 0x86, 0x7b, 0x98, 0xe6, 0x31, 0x44, 0x47, 0x53, 0x05,
    0x8c, 0x7c, 0xec, 0xb1, 0x80, 0xfb, 0xd5, 0x1f, 0xe8, 0x5a, 0xb8, 0xe9,
    0x0b, 0x16, 0x70, 0xd4, 0x68, 0x24, 0xb1, 0xba, 0x9a, 0x86, 0x86, 0x06,
    0xd5, 0xf9, 0x3a, 0x3a, 0x3a, 0x30, 0x54, 0x55, 0xb1, 0x6f, 0xc4, 0x08,
    0x66, 0xff, 0xf4, 0xa7, 0x1a, 0x7a, 0xa8, 0x1d, 0xba, 0x16, 0x2e, 0x27,
    0x37, 0x97, 0x6f, 0x1e, 0x7a, 0x88, 0x69, 0x57, 0xaf, 0x52, 0xb4, 0x65,
    0x8b, 0xea, 0x7c, 0x07, 0xb6, 0x6f, 0xe7, 0x07, 0xb5, 0xb5, 0x5c, 0x7d,
    0xf8, 0x61, 0xe2, 0xe3, 0xe3, 0x75, 0xd7, 0x4c, 0x82, 0xce, 0x85, 0x53,
    0x14, 0x45, 0x49, 0xf9, 0xc9, 0x4f, 0x90, 0x88, 0x08, 0x5a, 0xd6, 0xaf,
    0xa7, 0xa6, 0xaa, 0xca, 0x6f, 0x9e, 0xc6, 0xc6, 0x46, 0xce, 0xac, 0x5a,
    0x85, 0x7d, 0xf0, 0x60, 0xa6, 0xbe, 0xf4, 0x52, 0x3f, 0x78, 0xa9, 0x11,
    0xc1, 0x3e, 0x3b, 0xba, 0x5f, 0xeb, 0xe8, 0xe8, 0x90, 0xd5, 0xb9, 0xb9,
    0xe2, 0x02, 0x59, 0xf9, 0xc8, 0x23, 0x72, 0xae, 0xac, 0xcc, 0xe7, 0xd9,
    0x64, 0xf5, 0xa5, 0x4b, 0xb2, 0x6c, 0xc6, 0x0c, 0x69, 0x03, 0x59, 0x59,
    0x50, 0xa0, 0xbb, 0x33, 0xc9, 0x9e, 0x16, 0x74, 0x07, 0x02, 0x61, 0x3b,
    0x36, 0x6c, 0x90, 0x62, 0xa3, 0x51, 0x04, 0xe4, 0x7f, 0x53, 0x53, 0xe5,
    0xbf, 0x17, 0x2f, 0x96, 0xaf, 0x0e, 0x1d, 0x12, 0xa7, 0xd3, 0x29, 0x6d,
    0x6d, 0x6d, 0x52, 0x72, 0xec, 0x98, 0xbc, 0xbb, 0x64, 0x89, 0x6c, 0x7c,
    0xe0, 0x01, 0x71, 0x81, 0x6c, 0x4f, 0x4a, 0x92, 0xe3, 0x47, 0x8e, 0x0c,
    0x08, 0x17, 0x0a, 0xf6, 0xda, 0xc2, 0x85, 0xd2, 0xa0, 0x28, 0x22, 0x78,
    0xf6, 0xa9, 0x2c, 0x31, 0x18, 0xe4, 0xbd, 0xb4, 0x34, 0xf9, 0x9f, 0x8c,
    0x0c, 0xf9, 0x2a, 0x32, 0x52, 0x5a, 0xba, 0x86, 0xb7, 0x4e, 0x47, 0x45,
    0xc9, 0xe6, 0xe5, 0xcb, 0x75, 0x2d, 0x5a, 0x58, 0x09, 0xd7, 0xde, 0xde,
    0x2e, 0xcb, 0xf2, 0xf2, 0x6e, 0x3e, 0xf0, 0xc2, 0x9b, 0xd5, 0x2a, 0x8a,
    0xfc, 0x61, 0xfe, 0x7c, 0xdd, 0x8b, 0x16, 0x56, 0xc2, 0x89, 0x08, 0x4d,
    0x4d, 0x4d, 0xb2, 0x6a, 0xde, 0x3c, 0x39, 0x19, 0x1b, 0xdb, 0x4b, 0xb4,
    0xa2, 0xc4, 0x44, 0x79, 0xf3, 0x85, 0x17, 0xbc, 0xee, 0x44, 0xa7, 0x47,
    0x0b, 0xd8, 0x96, 0x50, 0xa1, 0xc4, 0xae, 0x0d, 0x1b, 0xa4, 0x62, 0xcf,
    0x1e, 0xe4, 0xe2, 0x45, 0x94, 0x41, 0x83, 0x50, 0x46, 0x8f, 0x66, 0xca,
    0xa2, 0x45, 0xe4, 0x15, 0x16, 0xea, 0xf2, 0xd4, 0xdf, 0x1b, 0xff, 0x0f,
    0xd0, 0x14, 0xbe, 0xed, 0x67, 0xd7, 0xa5, 0x5f, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a BezierWidgetBase as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 */
BezierWidgetBase::BezierWidgetBase( QWidget* parent, const char* name, WFlags fl )
    : QWidget( parent, name, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    if ( !name )
	setName( "bezierwidgetbase" );
    setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, sizePolicy().hasHeightForWidth() ) );
    setMinimumSize( QSize( 910, 540 ) );
    setIcon( image0 );
    setMouseTracking( TRUE );
    bezierwidgetbaseLayout = new QGridLayout( this, 1, 1, 11, 6, "bezierwidgetbaseLayout"); 

    layout15 = new QHBoxLayout( 0, 0, 6, "layout15"); 
    spacer5_2 = new QSpacerItem( 170, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout15->addItem( spacer5_2 );

    textLabel3 = new QLabel( this, "textLabel3" );
    textLabel3->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, textLabel3->sizePolicy().hasHeightForWidth() ) );
    textLabel3->setMinimumSize( QSize( 500, 10 ) );
    textLabel3->setMaximumSize( QSize( 32767, 15 ) );
    layout15->addWidget( textLabel3 );
    spacer5 = new QSpacerItem( 220, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout15->addItem( spacer5 );

    bezierwidgetbaseLayout->addLayout( layout15, 0, 0 );

    layout13 = new QVBoxLayout( 0, 0, 6, "layout13"); 

    qbezier = new Qbezier( this, "qbezier" );
    qbezier->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)1, (QSizePolicy::SizeType)1, 0, 0, qbezier->sizePolicy().hasHeightForWidth() ) );
    qbezier->setMinimumSize( QSize( 0, 220 ) );
    qbezier->setMouseTracking( TRUE );
    layout13->addWidget( qbezier );

    bezierScroll = new QScrollBar( this, "bezierScroll" );
    bezierScroll->setMaxValue( 0 );
    bezierScroll->setLineStep( 1 );
    bezierScroll->setOrientation( QScrollBar::Horizontal );
    layout13->addWidget( bezierScroll );

    bezierwidgetbaseLayout->addLayout( layout13, 2, 0 );

    layout24 = new QHBoxLayout( 0, 0, 6, "layout24"); 

    groupBox1 = new QGroupBox( this, "groupBox1" );
    groupBox1->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, groupBox1->sizePolicy().hasHeightForWidth() ) );

    textLabel1_2 = new QLabel( groupBox1, "textLabel1_2" );
    textLabel1_2->setGeometry( QRect( 10, 20, 59, 20 ) );

    ChkEnableScroll = new QCheckBox( groupBox1, "ChkEnableScroll" );
    ChkEnableScroll->setGeometry( QRect( 10, 80, 101, 21 ) );

    GridScale = new QLineEdit( groupBox1, "GridScale" );
    GridScale->setEnabled( FALSE );
    GridScale->setGeometry( QRect( 80, 50, 50, 21 ) );

    textLabel1_2_3 = new QLabel( groupBox1, "textLabel1_2_3" );
    textLabel1_2_3->setEnabled( FALSE );
    textLabel1_2_3->setGeometry( QRect( 10, 50, 50, 20 ) );

    FormGridWidth = new QLineEdit( groupBox1, "FormGridWidth" );
    FormGridWidth->setGeometry( QRect( 80, 20, 50, 21 ) );
    layout24->addWidget( groupBox1 );

    groupBox1_2 = new QGroupBox( this, "groupBox1_2" );
    groupBox1_2->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, groupBox1_2->sizePolicy().hasHeightForWidth() ) );

    textLabel1_3 = new QLabel( groupBox1_2, "textLabel1_3" );
    textLabel1_3->setGeometry( QRect( 10, 20, 66, 20 ) );

    textLabel1_2_2 = new QLabel( groupBox1_2, "textLabel1_2_2" );
    textLabel1_2_2->setGeometry( QRect( 10, 50, 50, 20 ) );

    ReverseSeek = new QCheckBox( groupBox1_2, "ReverseSeek" );
    ReverseSeek->setGeometry( QRect( 10, 80, 101, 21 ) );

    FormMinPos = new QLineEdit( groupBox1_2, "FormMinPos" );
    FormMinPos->setGeometry( QRect( 70, 50, 50, 21 ) );

    FormMaxPos = new QLineEdit( groupBox1_2, "FormMaxPos" );
    FormMaxPos->setGeometry( QRect( 70, 20, 50, 21 ) );
    layout24->addWidget( groupBox1_2 );

    groupBox7 = new QGroupBox( this, "groupBox7" );
    groupBox7->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, groupBox7->sizePolicy().hasHeightForWidth() ) );
    groupBox7->setMinimumSize( QSize( 478, 0 ) );
    groupBox7->setColumnLayout(0, Qt::Vertical );
    groupBox7->layout()->setSpacing( 6 );
    groupBox7->layout()->setMargin( 11 );
    groupBox7Layout = new QGridLayout( groupBox7->layout() );
    groupBox7Layout->setAlignment( Qt::AlignTop );

    splitter1 = new QSplitter( groupBox7, "splitter1" );
    splitter1->setOrientation( QSplitter::Horizontal );

    listRegOut = new QListView( splitter1, "listRegOut" );
    listRegOut->addColumn( tr( "Td" ) );
    listRegOut->addColumn( tr( "Pos" ) );
    listRegOut->addColumn( tr( "Tin" ) );
    listRegOut->addColumn( tr( "Tout" ) );
    listRegOut->setMaximumSize( QSize( 500, 32767 ) );
    listRegOut->setResizeMode( QListView::AllColumns );

    listRegOutHex = new QListView( splitter1, "listRegOutHex" );
    listRegOutHex->addColumn( tr( "Td" ) );
    listRegOutHex->addColumn( tr( "Pos" ) );
    listRegOutHex->addColumn( tr( "Tin" ) );
    listRegOutHex->addColumn( tr( "Tout" ) );
    listRegOutHex->setResizeMode( QListView::AllColumns );

    groupBox7Layout->addMultiCellWidget( splitter1, 0, 1, 0, 0 );

    btnOSSend = new QPushButton( groupBox7, "btnOSSend" );
    btnOSSend->setMaximumSize( QSize( 60, 32767 ) );

    groupBox7Layout->addWidget( btnOSSend, 1, 1 );

    servoList = new QListView( groupBox7, "servoList" );
    servoList->addColumn( tr( "sv" ) );
    servoList->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)5, (QSizePolicy::SizeType)5, 0, 0, servoList->sizePolicy().hasHeightForWidth() ) );
    servoList->setMinimumSize( QSize( 60, 60 ) );
    servoList->setMaximumSize( QSize( 60, 66 ) );
    servoList->setVScrollBarMode( QListView::AlwaysOn );
    servoList->setHScrollBarMode( QListView::AlwaysOff );

    groupBox7Layout->addWidget( servoList, 0, 1 );
    layout24->addWidget( groupBox7 );
    spacer3_2 = new QSpacerItem( 16, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout24->addItem( spacer3_2 );

    ServoSim = new QServo( this, "ServoSim" );
    ServoSim->setMinimumSize( QSize( 110, 110 ) );
    ServoSim->setMaximumSize( QSize( 110, 110 ) );
    layout24->addWidget( ServoSim );

    bezierwidgetbaseLayout->addLayout( layout24, 1, 0 );

    layout11 = new QHBoxLayout( 0, 0, 6, "layout11"); 

    layout19 = new QHBoxLayout( 0, 0, 6, "layout19"); 

    layout18 = new QVBoxLayout( 0, 0, 6, "layout18"); 

    textLabel2_2 = new QLabel( this, "textLabel2_2" );
    textLabel2_2->setMinimumSize( QSize( 75, 16 ) );
    layout18->addWidget( textLabel2_2 );

    label = new QLabel( this, "label" );
    label->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, label->sizePolicy().hasHeightForWidth() ) );
    label->setMinimumSize( QSize( 75, 16 ) );
    label->setMaximumSize( QSize( 50, 32767 ) );
    layout18->addWidget( label );
    layout19->addLayout( layout18 );

    layout17 = new QVBoxLayout( 0, 0, 6, "layout17"); 

    textLabel2 = new QLabel( this, "textLabel2" );
    textLabel2->setMinimumSize( QSize( 75, 16 ) );
    layout17->addWidget( textLabel2 );

    FormTimePos = new QLabel( this, "FormTimePos" );
    FormTimePos->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, FormTimePos->sizePolicy().hasHeightForWidth() ) );
    FormTimePos->setMinimumSize( QSize( 75, 16 ) );
    FormTimePos->setMaximumSize( QSize( 50, 32767 ) );
    layout17->addWidget( FormTimePos );
    layout19->addLayout( layout17 );

    layout16 = new QVBoxLayout( 0, 0, 6, "layout16"); 

    textLabel2_3 = new QLabel( this, "textLabel2_3" );
    textLabel2_3->setMinimumSize( QSize( 75, 16 ) );
    textLabel2_3->setAlignment( int( QLabel::AlignCenter ) );
    layout16->addWidget( textLabel2_3 );

    FormMotorPos = new QLabel( this, "FormMotorPos" );
    FormMotorPos->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, FormMotorPos->sizePolicy().hasHeightForWidth() ) );
    FormMotorPos->setMinimumSize( QSize( 75, 16 ) );
    FormMotorPos->setMaximumSize( QSize( 50, 32767 ) );
    layout16->addWidget( FormMotorPos );
    layout19->addLayout( layout16 );

    layout15_2 = new QVBoxLayout( 0, 0, 6, "layout15_2"); 

    textLabel2_3_2 = new QLabel( this, "textLabel2_3_2" );
    textLabel2_3_2->setMinimumSize( QSize( 75, 16 ) );
    textLabel2_3_2->setAlignment( int( QLabel::AlignCenter ) );
    layout15_2->addWidget( textLabel2_3_2 );

    FormMotorSpeed = new QLabel( this, "FormMotorSpeed" );
    FormMotorSpeed->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, FormMotorSpeed->sizePolicy().hasHeightForWidth() ) );
    FormMotorSpeed->setMinimumSize( QSize( 75, 16 ) );
    FormMotorSpeed->setMaximumSize( QSize( 50, 32767 ) );
    layout15_2->addWidget( FormMotorSpeed );
    layout19->addLayout( layout15_2 );
    layout11->addLayout( layout19 );

    layout10 = new QGridLayout( 0, 1, 1, 0, 6, "layout10"); 

    textLabel2_4 = new QLabel( this, "textLabel2_4" );

    layout10->addWidget( textLabel2_4, 0, 1 );

    textLabel2_4_2 = new QLabel( this, "textLabel2_4_2" );
    textLabel2_4_2->setMinimumSize( QSize( 40, 0 ) );
    textLabel2_4_2->setMaximumSize( QSize( 40, 32767 ) );

    layout10->addWidget( textLabel2_4_2, 1, 1 );

    textLabel1_4 = new QLabel( this, "textLabel1_4" );
    textLabel1_4->setMinimumSize( QSize( 15, 15 ) );
    textLabel1_4->setMaximumSize( QSize( 15, 15 ) );
    textLabel1_4->setPaletteBackgroundColor( QColor( 0, 170, 0 ) );

    layout10->addWidget( textLabel1_4, 1, 0 );

    textLabel1 = new QLabel( this, "textLabel1" );
    textLabel1->setMinimumSize( QSize( 15, 15 ) );
    textLabel1->setMaximumSize( QSize( 15, 15 ) );
    textLabel1->setPaletteBackgroundColor( QColor( 255, 0, 0 ) );

    layout10->addWidget( textLabel1, 0, 0 );
    layout11->addLayout( layout10 );
    spacer8 = new QSpacerItem( 30, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout11->addItem( spacer8 );

    groupBox4 = new QGroupBox( this, "groupBox4" );
    groupBox4->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, groupBox4->sizePolicy().hasHeightForWidth() ) );
    groupBox4->setMinimumSize( QSize( 10, 45 ) );
    groupBox4->setMaximumSize( QSize( 32767, 100 ) );

    FormGridDel = new QPushButton( groupBox4, "FormGridDel" );
    FormGridDel->setGeometry( QRect( 70, 20, 50, 21 ) );

    FormGridAdd = new QPushButton( groupBox4, "FormGridAdd" );
    FormGridAdd->setGeometry( QRect( 10, 20, 50, 21 ) );
    layout11->addWidget( groupBox4 );

    groupBox5 = new QGroupBox( this, "groupBox5" );
    groupBox5->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, groupBox5->sizePolicy().hasHeightForWidth() ) );
    groupBox5->setMinimumSize( QSize( 10, 45 ) );

    FormBtnSimStart = new QPushButton( groupBox5, "FormBtnSimStart" );
    FormBtnSimStart->setGeometry( QRect( 11, 20, 61, 20 ) );

    FormBtnSimPause = new QPushButton( groupBox5, "FormBtnSimPause" );
    FormBtnSimPause->setGeometry( QRect( 193, 20, 66, 20 ) );

    ServoSimLoop = new QCheckBox( groupBox5, "ServoSimLoop" );
    ServoSimLoop->setGeometry( QRect( 76, 20, 50, 20 ) );

    FormBtnSimStop = new QPushButton( groupBox5, "FormBtnSimStop" );
    FormBtnSimStop->setGeometry( QRect( 128, 20, 59, 20 ) );
    layout11->addWidget( groupBox5 );

    groupBox6 = new QGroupBox( this, "groupBox6" );
    groupBox6->setSizePolicy( QSizePolicy( (QSizePolicy::SizeType)0, (QSizePolicy::SizeType)0, 0, 0, groupBox6->sizePolicy().hasHeightForWidth() ) );
    groupBox6->setMinimumSize( QSize( 10, 45 ) );
    groupBox6->setMaximumSize( QSize( 55, 32767 ) );

    lblDebug = new QLabel( groupBox6, "lblDebug" );
    lblDebug->setGeometry( QRect( 10, 21, 40, 20 ) );
    layout11->addWidget( groupBox6 );

    bezierwidgetbaseLayout->addLayout( layout11, 3, 0 );
    languageChange();
    resize( QSize(910, 540).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( FormGridWidth, SIGNAL( textChanged(const QString&) ), this, SLOT( gridTimeChange(const QString&) ) );
    connect( FormMaxPos, SIGNAL( textChanged(const QString&) ), this, SLOT( servoMaxPosChange(const QString&) ) );
    connect( FormMinPos, SIGNAL( textChanged(const QString&) ), this, SLOT( servoMinPosChange(const QString&) ) );
    connect( FormBtnSimStart, SIGNAL( clicked() ), this, SLOT( BtnSimStart() ) );
    connect( FormBtnSimStop, SIGNAL( clicked() ), this, SLOT( BtnSimStop() ) );
    connect( FormBtnSimPause, SIGNAL( clicked() ), this, SLOT( BtnSimPause() ) );
    connect( FormGridAdd, SIGNAL( clicked() ), this, SLOT( BtnGridAdd() ) );
    connect( FormGridDel, SIGNAL( clicked() ), this, SLOT( BtnGridDel() ) );
    connect( bezierScroll, SIGNAL( valueChanged(int) ), this, SLOT( FormBezierScroll(int) ) );
    connect( qbezier, SIGNAL( setXY(int,int) ), this, SLOT( setLabelXY(int,int) ) );
    connect( qbezier, SIGNAL( calcparams() ), this, SLOT( UpdateRegisters() ) );
    connect( ChkEnableScroll, SIGNAL( toggled(bool) ), this, SLOT( enableScroll(bool) ) );
    connect( qbezier, SIGNAL( setInfo(QString&) ), this, SLOT( infoUpdate(QString&) ) );
    connect( btnOSSend, SIGNAL( clicked() ), this, SLOT( BtnOSsendCurve() ) );
    connect( servoList, SIGNAL( selectionChanged(QListViewItem*) ), this, SLOT( servoChanged(QListViewItem*) ) );

    // tab order
    setTabOrder( FormGridWidth, FormBtnSimStart );
    setTabOrder( FormBtnSimStart, ChkEnableScroll );
    setTabOrder( ChkEnableScroll, GridScale );
    setTabOrder( GridScale, ReverseSeek );
    setTabOrder( ReverseSeek, FormMinPos );
    setTabOrder( FormMinPos, FormMaxPos );
    setTabOrder( FormMaxPos, listRegOut );
    setTabOrder( listRegOut, FormGridAdd );
    setTabOrder( FormGridAdd, FormGridDel );
    setTabOrder( FormGridDel, FormBtnSimStop );
    setTabOrder( FormBtnSimStop, FormBtnSimPause );
}

/*
 *  Destroys the object and frees any allocated resources
 */
BezierWidgetBase::~BezierWidgetBase()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void BezierWidgetBase::languageChange()
{
    setCaption( tr( "bezierwidgetbase" ) );
    textLabel3->setText( tr( "<b><a href=\"www.openservo.com\">OpenServo</a> Motion Profile Editor</b> - &copy; Barry Carter 2007" ) );
    groupBox1->setTitle( tr( "Grid size" ) );
    textLabel1_2->setText( tr( "Time(ms)" ) );
    ChkEnableScroll->setText( tr( "Scrollbars" ) );
    GridScale->setText( tr( "1.0" ) );
    textLabel1_2_3->setText( tr( "Scale" ) );
    FormGridWidth->setText( tr( "4500" ) );
    groupBox1_2->setTitle( tr( "Servo Parameters" ) );
    textLabel1_3->setText( tr( "Max pos" ) );
    textLabel1_2_2->setText( tr( "Min Pos" ) );
    ReverseSeek->setText( tr( "Reverse see&k" ) );
    ReverseSeek->setAccel( QKeySequence( tr( "Alt+K" ) ) );
    FormMinPos->setText( tr( "100" ) );
    FormMaxPos->setText( tr( "980" ) );
    groupBox7->setTitle( tr( "OpenServo Register Output (dec / hex)" ) );
    listRegOut->header()->setLabel( 0, tr( "Td" ) );
    listRegOut->header()->setLabel( 1, tr( "Pos" ) );
    listRegOut->header()->setLabel( 2, tr( "Tin" ) );
    listRegOut->header()->setLabel( 3, tr( "Tout" ) );
    listRegOutHex->header()->setLabel( 0, tr( "Td" ) );
    listRegOutHex->header()->setLabel( 1, tr( "Pos" ) );
    listRegOutHex->header()->setLabel( 2, tr( "Tin" ) );
    listRegOutHex->header()->setLabel( 3, tr( "Tout" ) );
    btnOSSend->setText( tr( "Se&nd" ) );
    servoList->header()->setLabel( 0, tr( "sv" ) );
    textLabel2_2->setText( tr( "Mouse XY" ) );
    label->setText( QString::null );
    textLabel2->setText( tr( "Time Pos" ) );
    FormTimePos->setText( QString::null );
    textLabel2_3->setText( tr( "pos" ) );
    FormMotorPos->setText( QString::null );
    textLabel2_3_2->setText( tr( "speed" ) );
    FormMotorSpeed->setText( QString::null );
    textLabel2_4->setText( tr( "Pos" ) );
    textLabel2_4_2->setText( tr( "Current" ) );
    textLabel1_4->setText( QString::null );
    textLabel1->setText( QString::null );
    groupBox4->setTitle( tr( "Key frame" ) );
    FormGridDel->setText( tr( "Del" ) );
    FormGridDel->setAccel( QKeySequence( QString::null ) );
    FormGridAdd->setText( tr( "&Add" ) );
    FormGridAdd->setAccel( QKeySequence( tr( "Alt+A" ) ) );
    groupBox5->setTitle( tr( "Simulation Control" ) );
    FormBtnSimStart->setText( tr( "&Start" ) );
    FormBtnSimStart->setAccel( QKeySequence( tr( "Alt+S" ) ) );
    FormBtnSimPause->setText( tr( "Pa&use" ) );
    FormBtnSimPause->setAccel( QKeySequence( tr( "Alt+U" ) ) );
    ServoSimLoop->setText( tr( "&Loop" ) );
    ServoSimLoop->setAccel( QKeySequence( tr( "Alt+L" ) ) );
    FormBtnSimStop->setText( tr( "St&op" ) );
    FormBtnSimStop->setAccel( QKeySequence( tr( "Alt+O" ) ) );
    groupBox6->setTitle( tr( "Info" ) );
    lblDebug->setText( tr( ":" ) );
}

void BezierWidgetBase::setLabel(int,int)
{
    qWarning( "BezierWidgetBase::setLabel(int,int): Not implemented yet" );
}

void BezierWidgetBase::button_clicked()
{
    qWarning( "BezierWidgetBase::button_clicked(): Not implemented yet" );
}

void BezierWidgetBase::doresize(int,int)
{
    qWarning( "BezierWidgetBase::doresize(int,int): Not implemented yet" );
}

void BezierWidgetBase::mouseMove(int,int)
{
    qWarning( "BezierWidgetBase::mouseMove(int,int): Not implemented yet" );
}

void BezierWidgetBase::mousePress(QMouseEvent*)
{
    qWarning( "BezierWidgetBase::mousePress(QMouseEvent*): Not implemented yet" );
}

void BezierWidgetBase::mouseRelease(QMouseEvent*)
{
    qWarning( "BezierWidgetBase::mouseRelease(QMouseEvent*): Not implemented yet" );
}

void BezierWidgetBase::gridTimeChange(const QString&)
{
    qWarning( "BezierWidgetBase::gridTimeChange(const QString&): Not implemented yet" );
}

void BezierWidgetBase::servoMaxPosChange(const QString&)
{
    qWarning( "BezierWidgetBase::servoMaxPosChange(const QString&): Not implemented yet" );
}

void BezierWidgetBase::servoMinPosChange(const QString&)
{
    qWarning( "BezierWidgetBase::servoMinPosChange(const QString&): Not implemented yet" );
}

void BezierWidgetBase::BtnSimStart()
{
    qWarning( "BezierWidgetBase::BtnSimStart(): Not implemented yet" );
}

void BezierWidgetBase::BtnSimStop()
{
    qWarning( "BezierWidgetBase::BtnSimStop(): Not implemented yet" );
}

void BezierWidgetBase::BtnSimPause()
{
    qWarning( "BezierWidgetBase::BtnSimPause(): Not implemented yet" );
}

void BezierWidgetBase::setLabelXY(int,int)
{
    qWarning( "BezierWidgetBase::setLabelXY(int,int): Not implemented yet" );
}

void BezierWidgetBase::BtnGridDel()
{
    qWarning( "BezierWidgetBase::BtnGridDel(): Not implemented yet" );
}

void BezierWidgetBase::FormBezierScroll(int)
{
    qWarning( "BezierWidgetBase::FormBezierScroll(int): Not implemented yet" );
}

void BezierWidgetBase::repaintbezier(QPaintEvent*)
{
    qWarning( "BezierWidgetBase::repaintbezier(QPaintEvent*): Not implemented yet" );
}

void BezierWidgetBase::BtnGridAdd()
{
    qWarning( "BezierWidgetBase::BtnGridAdd(): Not implemented yet" );
}

void BezierWidgetBase::UpdateRegisters()
{
    qWarning( "BezierWidgetBase::UpdateRegisters(): Not implemented yet" );
}

void BezierWidgetBase::enableScroll(bool)
{
    qWarning( "BezierWidgetBase::enableScroll(bool): Not implemented yet" );
}

void BezierWidgetBase::infoUpdate(QString&)
{
    qWarning( "BezierWidgetBase::infoUpdate(QString&): Not implemented yet" );
}

void BezierWidgetBase::BtnOSsendCurve()
{
    qWarning( "BezierWidgetBase::BtnOSsendCurve(): Not implemented yet" );
}

void BezierWidgetBase::servoChanged(QListViewItem*)
{
    qWarning( "BezierWidgetBase::servoChanged(QListViewItem*): Not implemented yet" );
}

